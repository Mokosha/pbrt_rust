extern crate pbrt_rust;
use pbrt_rust::spectrum::Spectrum;

const NUM_CIE_SAMPLES: usize = 471;
const CIE_X: [f32; NUM_CIE_SAMPLES] = [
    // CIE X function values
    0.0001299000f32, 0.0001458470f32, 0.0001638021f32, 0.0001840037f32,
    0.0002066902f32,  0.0002321000f32,  0.0002607280f32,  0.0002930750f32,
    0.0003293880f32,  0.0003699140f32,  0.0004149000f32,  0.0004641587f32,
    0.0005189860f32,  0.0005818540f32,  0.0006552347f32,  0.0007416000f32,
    0.0008450296f32,  0.0009645268f32,  0.001094949f32,  0.001231154f32,
    0.001368000f32,  0.001502050f32,  0.001642328f32,  0.001802382f32,
    0.001995757f32,  0.002236000f32,  0.002535385f32,  0.002892603f32,
    0.003300829f32,  0.003753236f32,  0.004243000f32,  0.004762389f32,
    0.005330048f32,  0.005978712f32,  0.006741117f32,  0.007650000f32,
    0.008751373f32,  0.01002888f32,  0.01142170f32,  0.01286901f32,
    0.01431000f32,  0.01570443f32,  0.01714744f32,  0.01878122f32,
    0.02074801f32,  0.02319000f32,  0.02620736f32,  0.02978248f32,
    0.03388092f32,  0.03846824f32,  0.04351000f32,  0.04899560f32,
    0.05502260f32,  0.06171880f32,  0.06921200f32,  0.07763000f32,
    0.08695811f32,  0.09717672f32,  0.1084063f32,  0.1207672f32,
    0.1343800f32,  0.1493582f32,  0.1653957f32,  0.1819831f32,
    0.1986110f32,  0.2147700f32,  0.2301868f32,  0.2448797f32,
    0.2587773f32,  0.2718079f32,  0.2839000f32,  0.2949438f32,
    0.3048965f32,  0.3137873f32,  0.3216454f32,  0.3285000f32,
    0.3343513f32,  0.3392101f32,  0.3431213f32,  0.3461296f32,
    0.3482800f32,  0.3495999f32,  0.3501474f32,  0.3500130f32,
    0.3492870f32,  0.3480600f32,  0.3463733f32,  0.3442624f32,
    0.3418088f32,  0.3390941f32,  0.3362000f32,  0.3331977f32,
    0.3300411f32,  0.3266357f32,  0.3228868f32,  0.3187000f32,
    0.3140251f32,  0.3088840f32,  0.3032904f32,  0.2972579f32,
    0.2908000f32,  0.2839701f32,  0.2767214f32,  0.2689178f32,
    0.2604227f32,  0.2511000f32,  0.2408475f32,  0.2298512f32,
    0.2184072f32,  0.2068115f32,  0.1953600f32,  0.1842136f32,
    0.1733273f32,  0.1626881f32,  0.1522833f32,  0.1421000f32,
    0.1321786f32,  0.1225696f32,  0.1132752f32,  0.1042979f32,
    0.09564000f32,  0.08729955f32,  0.07930804f32,  0.07171776f32,
    0.06458099f32,  0.05795001f32,  0.05186211f32,  0.04628152f32,
    0.04115088f32,  0.03641283f32,  0.03201000f32,  0.02791720f32,
    0.02414440f32,  0.02068700f32,  0.01754040f32,  0.01470000f32,
    0.01216179f32,  0.009919960f32,  0.007967240f32,  0.006296346f32,
    0.004900000f32,  0.003777173f32,  0.002945320f32,  0.002424880f32,
    0.002236293f32,  0.002400000f32,  0.002925520f32,  0.003836560f32,
    0.005174840f32,  0.006982080f32,  0.009300000f32,  0.01214949f32,
    0.01553588f32,  0.01947752f32,  0.02399277f32,  0.02910000f32,
    0.03481485f32,  0.04112016f32,  0.04798504f32,  0.05537861f32,
    0.06327000f32,  0.07163501f32,  0.08046224f32,  0.08973996f32,
    0.09945645f32,  0.1096000f32,  0.1201674f32,  0.1311145f32,
    0.1423679f32,  0.1538542f32,  0.1655000f32,  0.1772571f32,
    0.1891400f32,  0.2011694f32,  0.2133658f32,  0.2257499f32,
    0.2383209f32,  0.2510668f32,  0.2639922f32,  0.2771017f32,
    0.2904000f32,  0.3038912f32,  0.3175726f32,  0.3314384f32,
    0.3454828f32,  0.3597000f32,  0.3740839f32,  0.3886396f32,
    0.4033784f32,  0.4183115f32,  0.4334499f32,  0.4487953f32,
    0.4643360f32,  0.4800640f32,  0.4959713f32,  0.5120501f32,
    0.5282959f32,  0.5446916f32,  0.5612094f32,  0.5778215f32,
    0.5945000f32,  0.6112209f32,  0.6279758f32,  0.6447602f32,
    0.6615697f32,  0.6784000f32,  0.6952392f32,  0.7120586f32,
    0.7288284f32,  0.7455188f32,  0.7621000f32,  0.7785432f32,
    0.7948256f32,  0.8109264f32,  0.8268248f32,  0.8425000f32,
    0.8579325f32,  0.8730816f32,  0.8878944f32,  0.9023181f32,
    0.9163000f32,  0.9297995f32,  0.9427984f32,  0.9552776f32,
    0.9672179f32,  0.9786000f32,  0.9893856f32,  0.9995488f32,
    1.0090892f32,  1.0180064f32,  1.0263000f32,  1.0339827f32,
    1.0409860f32,  1.0471880f32,  1.0524667f32,  1.0567000f32,
    1.0597944f32,  1.0617992f32,  1.0628068f32,  1.0629096f32,
    1.0622000f32,  1.0607352f32,  1.0584436f32,  1.0552244f32,
    1.0509768f32,  1.0456000f32,  1.0390369f32,  1.0313608f32,
    1.0226662f32,  1.0130477f32,  1.0026000f32,  0.9913675f32,
    0.9793314f32,  0.9664916f32,  0.9528479f32,  0.9384000f32,
    0.9231940f32,  0.9072440f32,  0.8905020f32,  0.8729200f32,
    0.8544499f32,  0.8350840f32,  0.8149460f32,  0.7941860f32,
    0.7729540f32,  0.7514000f32,  0.7295836f32,  0.7075888f32,
    0.6856022f32,  0.6638104f32,  0.6424000f32,  0.6215149f32,
    0.6011138f32,  0.5811052f32,  0.5613977f32,  0.5419000f32,
    0.5225995f32,  0.5035464f32,  0.4847436f32,  0.4661939f32,
    0.4479000f32,  0.4298613f32,  0.4120980f32,  0.3946440f32,
    0.3775333f32,  0.3608000f32,  0.3444563f32,  0.3285168f32,
    0.3130192f32,  0.2980011f32,  0.2835000f32,  0.2695448f32,
    0.2561184f32,  0.2431896f32,  0.2307272f32,  0.2187000f32,
    0.2070971f32,  0.1959232f32,  0.1851708f32,  0.1748323f32,
    0.1649000f32,  0.1553667f32,  0.1462300f32,  0.1374900f32,
    0.1291467f32,  0.1212000f32,  0.1136397f32,  0.1064650f32,
    0.09969044f32,  0.09333061f32,  0.08740000f32,  0.08190096f32,
    0.07680428f32,  0.07207712f32,  0.06768664f32,  0.06360000f32,
    0.05980685f32,  0.05628216f32,  0.05297104f32,  0.04981861f32,
    0.04677000f32,  0.04378405f32,  0.04087536f32,  0.03807264f32,
    0.03540461f32,  0.03290000f32,  0.03056419f32,  0.02838056f32,
    0.02634484f32,  0.02445275f32,  0.02270000f32,  0.02108429f32,
    0.01959988f32,  0.01823732f32,  0.01698717f32,  0.01584000f32,
    0.01479064f32,  0.01383132f32,  0.01294868f32,  0.01212920f32,
    0.01135916f32,  0.01062935f32,  0.009938846f32,  0.009288422f32,
    0.008678854f32,  0.008110916f32,  0.007582388f32,  0.007088746f32,
    0.006627313f32,  0.006195408f32,  0.005790346f32,  0.005409826f32,
    0.005052583f32,  0.004717512f32,  0.004403507f32,  0.004109457f32,
    0.003833913f32,  0.003575748f32,  0.003334342f32,  0.003109075f32,
    0.002899327f32,  0.002704348f32,  0.002523020f32,  0.002354168f32,
    0.002196616f32,  0.002049190f32,  0.001910960f32,  0.001781438f32,
    0.001660110f32,  0.001546459f32,  0.001439971f32,  0.001340042f32,
    0.001246275f32,  0.001158471f32,  0.001076430f32,  0.0009999493f32,
    0.0009287358f32,  0.0008624332f32,  0.0008007503f32,  0.0007433960f32,
    0.0006900786f32,  0.0006405156f32,  0.0005945021f32,  0.0005518646f32,
    0.0005124290f32,  0.0004760213f32,  0.0004424536f32,  0.0004115117f32,
    0.0003829814f32,  0.0003566491f32,  0.0003323011f32,  0.0003097586f32,
    0.0002888871f32,  0.0002695394f32,  0.0002515682f32,  0.0002348261f32,
    0.0002191710f32,  0.0002045258f32,  0.0001908405f32,  0.0001780654f32,
    0.0001661505f32,  0.0001550236f32,  0.0001446219f32,  0.0001349098f32,
    0.0001258520f32,  0.0001174130f32,  0.0001095515f32,  0.0001022245f32,
    0.00009539445f32,  0.00008902390f32,  0.00008307527f32,  0.00007751269f32,
    0.00007231304f32,  0.00006745778f32,  0.00006292844f32,  0.00005870652f32,
    0.00005477028f32,  0.00005109918f32,  0.00004767654f32,  0.00004448567f32,
    0.00004150994f32,  0.00003873324f32,  0.00003614203f32,  0.00003372352f32,
    0.00003146487f32,  0.00002935326f32,  0.00002737573f32,  0.00002552433f32,
    0.00002379376f32,  0.00002217870f32,  0.00002067383f32,  0.00001927226f32,
    0.00001796640f32,  0.00001674991f32,  0.00001561648f32,  0.00001455977f32,
    0.00001357387f32,  0.00001265436f32,  0.00001179723f32,  0.00001099844f32,
    0.00001025398f32,  0.000009559646f32,  0.000008912044f32,  0.000008308358f32,
    0.000007745769f32,  0.000007221456f32,  0.000006732475f32,  0.000006276423f32,
    0.000005851304f32,  0.000005455118f32,  0.000005085868f32,  0.000004741466f32,
    0.000004420236f32,  0.000004120783f32,  0.000003841716f32,  0.000003581652f32,
    0.000003339127f32,  0.000003112949f32,  0.000002902121f32,  0.000002705645f32,
    0.000002522525f32,  0.000002351726f32,  0.000002192415f32,  0.000002043902f32,
    0.000001905497f32,  0.000001776509f32,  0.000001656215f32,  0.000001544022f32,
    0.000001439440f32, 0.000001341977f32, 0.000001251141f32
];

const CIE_Y: [f32; NUM_CIE_SAMPLES] = [
    // CIE Y function values
    0.000003917000f32,  0.000004393581f32,  0.000004929604f32,  0.000005532136f32,
    0.000006208245f32,  0.000006965000f32,  0.000007813219f32,  0.000008767336f32,
    0.000009839844f32,  0.00001104323f32,  0.00001239000f32,  0.00001388641f32,
    0.00001555728f32,  0.00001744296f32,  0.00001958375f32,  0.00002202000f32,
    0.00002483965f32,  0.00002804126f32,  0.00003153104f32,  0.00003521521f32,
    0.00003900000f32,  0.00004282640f32,  0.00004691460f32,  0.00005158960f32,
    0.00005717640f32,  0.00006400000f32,  0.00007234421f32,  0.00008221224f32,
    0.00009350816f32,  0.0001061361f32,  0.0001200000f32,  0.0001349840f32,
    0.0001514920f32,  0.0001702080f32,  0.0001918160f32,  0.0002170000f32,
    0.0002469067f32,  0.0002812400f32,  0.0003185200f32,  0.0003572667f32,
    0.0003960000f32,  0.0004337147f32,  0.0004730240f32,  0.0005178760f32,
    0.0005722187f32,  0.0006400000f32,  0.0007245600f32,  0.0008255000f32,
    0.0009411600f32,  0.001069880f32,  0.001210000f32,  0.001362091f32,
    0.001530752f32,  0.001720368f32,  0.001935323f32,  0.002180000f32,
    0.002454800f32,  0.002764000f32,  0.003117800f32,  0.003526400f32,
    0.004000000f32,  0.004546240f32,  0.005159320f32,  0.005829280f32,
    0.006546160f32,  0.007300000f32,  0.008086507f32,  0.008908720f32,
    0.009767680f32,  0.01066443f32,  0.01160000f32,  0.01257317f32,
    0.01358272f32,  0.01462968f32,  0.01571509f32,  0.01684000f32,
    0.01800736f32,  0.01921448f32,  0.02045392f32,  0.02171824f32,
    0.02300000f32,  0.02429461f32,  0.02561024f32,  0.02695857f32,
    0.02835125f32,  0.02980000f32,  0.03131083f32,  0.03288368f32,
    0.03452112f32,  0.03622571f32,  0.03800000f32,  0.03984667f32,
    0.04176800f32,  0.04376600f32,  0.04584267f32,  0.04800000f32,
    0.05024368f32,  0.05257304f32,  0.05498056f32,  0.05745872f32,
    0.06000000f32,  0.06260197f32,  0.06527752f32,  0.06804208f32,
    0.07091109f32,  0.07390000f32,  0.07701600f32,  0.08026640f32,
    0.08366680f32,  0.08723280f32,  0.09098000f32,  0.09491755f32,
    0.09904584f32,  0.1033674f32,  0.1078846f32,  0.1126000f32,
    0.1175320f32,  0.1226744f32,  0.1279928f32,  0.1334528f32,
    0.1390200f32,  0.1446764f32,  0.1504693f32,  0.1564619f32,
    0.1627177f32,  0.1693000f32,  0.1762431f32,  0.1835581f32,
    0.1912735f32,  0.1994180f32,  0.2080200f32,  0.2171199f32,
    0.2267345f32,  0.2368571f32,  0.2474812f32,  0.2586000f32,
    0.2701849f32,  0.2822939f32,  0.2950505f32,  0.3085780f32,
    0.3230000f32,  0.3384021f32,  0.3546858f32,  0.3716986f32,
    0.3892875f32,  0.4073000f32,  0.4256299f32,  0.4443096f32,
    0.4633944f32,  0.4829395f32,  0.5030000f32,  0.5235693f32,
    0.5445120f32,  0.5656900f32,  0.5869653f32,  0.6082000f32,
    0.6293456f32,  0.6503068f32,  0.6708752f32,  0.6908424f32,
    0.7100000f32,  0.7281852f32,  0.7454636f32,  0.7619694f32,
    0.7778368f32,  0.7932000f32,  0.8081104f32,  0.8224962f32,
    0.8363068f32,  0.8494916f32,  0.8620000f32,  0.8738108f32,
    0.8849624f32,  0.8954936f32,  0.9054432f32,  0.9148501f32,
    0.9237348f32,  0.9320924f32,  0.9399226f32,  0.9472252f32,
    0.9540000f32,  0.9602561f32,  0.9660074f32,  0.9712606f32,
    0.9760225f32,  0.9803000f32,  0.9840924f32,  0.9874812f32,
    0.9903128f32,  0.9928116f32,  0.9949501f32,  0.9967108f32,
    0.9980983f32,  0.9991120f32,  0.9997482f32,  1.0000000f32,
    0.9998567f32,  0.9993046f32,  0.9983255f32,  0.9968987f32,
    0.9950000f32,  0.9926005f32,  0.9897426f32,  0.9864444f32,
    0.9827241f32,  0.9786000f32,  0.9740837f32,  0.9691712f32,
    0.9638568f32,  0.9581349f32,  0.9520000f32,  0.9454504f32,
    0.9384992f32,  0.9311628f32,  0.9234576f32,  0.9154000f32,
    0.9070064f32,  0.8982772f32,  0.8892048f32,  0.8797816f32,
    0.8700000f32,  0.8598613f32,  0.8493920f32,  0.8386220f32,
    0.8275813f32,  0.8163000f32,  0.8047947f32,  0.7930820f32,
    0.7811920f32,  0.7691547f32,  0.7570000f32,  0.7447541f32,
    0.7324224f32,  0.7200036f32,  0.7074965f32,  0.6949000f32,
    0.6822192f32,  0.6694716f32,  0.6566744f32,  0.6438448f32,
    0.6310000f32,  0.6181555f32,  0.6053144f32,  0.5924756f32,
    0.5796379f32,  0.5668000f32,  0.5539611f32,  0.5411372f32,
    0.5283528f32,  0.5156323f32,  0.5030000f32,  0.4904688f32,
    0.4780304f32,  0.4656776f32,  0.4534032f32,  0.4412000f32,
    0.4290800f32,  0.4170360f32,  0.4050320f32,  0.3930320f32,
    0.3810000f32,  0.3689184f32,  0.3568272f32,  0.3447768f32,
    0.3328176f32,  0.3210000f32,  0.3093381f32,  0.2978504f32,
    0.2865936f32,  0.2756245f32,  0.2650000f32,  0.2547632f32,
    0.2448896f32,  0.2353344f32,  0.2260528f32,  0.2170000f32,
    0.2081616f32,  0.1995488f32,  0.1911552f32,  0.1829744f32,
    0.1750000f32,  0.1672235f32,  0.1596464f32,  0.1522776f32,
    0.1451259f32,  0.1382000f32,  0.1315003f32,  0.1250248f32,
    0.1187792f32,  0.1127691f32,  0.1070000f32,  0.1014762f32,
    0.09618864f32,  0.09112296f32,  0.08626485f32,  0.08160000f32,
    0.07712064f32,  0.07282552f32,  0.06871008f32,  0.06476976f32,
    0.06100000f32,  0.05739621f32,  0.05395504f32,  0.05067376f32,
    0.04754965f32,  0.04458000f32,  0.04175872f32,  0.03908496f32,
    0.03656384f32,  0.03420048f32,  0.03200000f32,  0.02996261f32,
    0.02807664f32,  0.02632936f32,  0.02470805f32,  0.02320000f32,
    0.02180077f32,  0.02050112f32,  0.01928108f32,  0.01812069f32,
    0.01700000f32,  0.01590379f32,  0.01483718f32,  0.01381068f32,
    0.01283478f32,  0.01192000f32,  0.01106831f32,  0.01027339f32,
    0.009533311f32,  0.008846157f32,  0.008210000f32,  0.007623781f32,
    0.007085424f32,  0.006591476f32,  0.006138485f32,  0.005723000f32,
    0.005343059f32,  0.004995796f32,  0.004676404f32,  0.004380075f32,
    0.004102000f32,  0.003838453f32,  0.003589099f32,  0.003354219f32,
    0.003134093f32,  0.002929000f32,  0.002738139f32,  0.002559876f32,
    0.002393244f32,  0.002237275f32,  0.002091000f32,  0.001953587f32,
    0.001824580f32,  0.001703580f32,  0.001590187f32,  0.001484000f32,
    0.001384496f32,  0.001291268f32,  0.001204092f32,  0.001122744f32,
    0.001047000f32,  0.0009765896f32,  0.0009111088f32,  0.0008501332f32,
    0.0007932384f32,  0.0007400000f32,  0.0006900827f32,  0.0006433100f32,
    0.0005994960f32,  0.0005584547f32,  0.0005200000f32,  0.0004839136f32,
    0.0004500528f32,  0.0004183452f32,  0.0003887184f32,  0.0003611000f32,
    0.0003353835f32,  0.0003114404f32,  0.0002891656f32,  0.0002684539f32,
    0.0002492000f32,  0.0002313019f32,  0.0002146856f32,  0.0001992884f32,
    0.0001850475f32,  0.0001719000f32,  0.0001597781f32,  0.0001486044f32,
    0.0001383016f32,  0.0001287925f32,  0.0001200000f32,  0.0001118595f32,
    0.0001043224f32,  0.00009733560f32,  0.00009084587f32,  0.00008480000f32,
    0.00007914667f32,  0.00007385800f32,  0.00006891600f32,  0.00006430267f32,
    0.00006000000f32,  0.00005598187f32,  0.00005222560f32,  0.00004871840f32,
    0.00004544747f32,  0.00004240000f32,  0.00003956104f32,  0.00003691512f32,
    0.00003444868f32,  0.00003214816f32,  0.00003000000f32,  0.00002799125f32,
    0.00002611356f32,  0.00002436024f32,  0.00002272461f32,  0.00002120000f32,
    0.00001977855f32,  0.00001845285f32,  0.00001721687f32,  0.00001606459f32,
    0.00001499000f32,  0.00001398728f32,  0.00001305155f32,  0.00001217818f32,
    0.00001136254f32,  0.00001060000f32,  0.000009885877f32,  0.000009217304f32,
    0.000008592362f32,  0.000008009133f32,  0.000007465700f32,  0.000006959567f32,
    0.000006487995f32,  0.000006048699f32,  0.000005639396f32,  0.000005257800f32,
    0.000004901771f32,  0.000004569720f32,  0.000004260194f32,  0.000003971739f32,
    0.000003702900f32,  0.000003452163f32,  0.000003218302f32,  0.000003000300f32,
    0.000002797139f32,  0.000002607800f32,  0.000002431220f32,  0.000002266531f32,
    0.000002113013f32,  0.000001969943f32,  0.000001836600f32,  0.000001712230f32,
    0.000001596228f32,  0.000001488090f32,  0.000001387314f32,  0.000001293400f32,
    0.000001205820f32,  0.000001124143f32,  0.000001048009f32,  0.0000009770578f32,
    0.0000009109300f32,  0.0000008492513f32,  0.0000007917212f32,  0.0000007380904f32,
    0.0000006881098f32,  0.0000006415300f32,  0.0000005980895f32,  0.0000005575746f32,
    0.0000005198080f32, 0.0000004846123f32, 0.0000004518100f32
];

const CIE_Z: [f32; NUM_CIE_SAMPLES] = [
    // CIE Z function values
    0.0006061000f32,  0.0006808792f32,  0.0007651456f32,  0.0008600124f32,
    0.0009665928f32,  0.001086000f32,  0.001220586f32,  0.001372729f32,
    0.001543579f32,  0.001734286f32,  0.001946000f32,  0.002177777f32,
    0.002435809f32,  0.002731953f32,  0.003078064f32,  0.003486000f32,
    0.003975227f32,  0.004540880f32,  0.005158320f32,  0.005802907f32,
    0.006450001f32,  0.007083216f32,  0.007745488f32,  0.008501152f32,
    0.009414544f32,  0.01054999f32,  0.01196580f32,  0.01365587f32,
    0.01558805f32,  0.01773015f32,  0.02005001f32,  0.02251136f32,
    0.02520288f32,  0.02827972f32,  0.03189704f32,  0.03621000f32,
    0.04143771f32,  0.04750372f32,  0.05411988f32,  0.06099803f32,
    0.06785001f32,  0.07448632f32,  0.08136156f32,  0.08915364f32,
    0.09854048f32,  0.1102000f32,  0.1246133f32,  0.1417017f32,
    0.1613035f32,  0.1832568f32,  0.2074000f32,  0.2336921f32,
    0.2626114f32,  0.2947746f32,  0.3307985f32,  0.3713000f32,
    0.4162091f32,  0.4654642f32,  0.5196948f32,  0.5795303f32,
    0.6456000f32,  0.7184838f32,  0.7967133f32,  0.8778459f32,
    0.9594390f32,  1.0390501f32,  1.1153673f32,  1.1884971f32,
    1.2581233f32,  1.3239296f32,  1.3856000f32,  1.4426352f32,
    1.4948035f32,  1.5421903f32,  1.5848807f32,  1.6229600f32,
    1.6564048f32,  1.6852959f32,  1.7098745f32,  1.7303821f32,
    1.7470600f32,  1.7600446f32,  1.7696233f32,  1.7762637f32,
    1.7804334f32,  1.7826000f32,  1.7829682f32,  1.7816998f32,
    1.7791982f32,  1.7758671f32,  1.7721100f32,  1.7682589f32,
    1.7640390f32,  1.7589438f32,  1.7524663f32,  1.7441000f32,
    1.7335595f32,  1.7208581f32,  1.7059369f32,  1.6887372f32,
    1.6692000f32,  1.6475287f32,  1.6234127f32,  1.5960223f32,
    1.5645280f32,  1.5281000f32,  1.4861114f32,  1.4395215f32,
    1.3898799f32,  1.3387362f32,  1.2876400f32,  1.2374223f32,
    1.1878243f32,  1.1387611f32,  1.0901480f32,  1.0419000f32,
    0.9941976f32,  0.9473473f32,  0.9014531f32,  0.8566193f32,
    0.8129501f32,  0.7705173f32,  0.7294448f32,  0.6899136f32,
    0.6521049f32,  0.6162000f32,  0.5823286f32,  0.5504162f32,
    0.5203376f32,  0.4919673f32,  0.4651800f32,  0.4399246f32,
    0.4161836f32,  0.3938822f32,  0.3729459f32,  0.3533000f32,
    0.3348578f32,  0.3175521f32,  0.3013375f32,  0.2861686f32,
    0.2720000f32,  0.2588171f32,  0.2464838f32,  0.2347718f32,
    0.2234533f32,  0.2123000f32,  0.2011692f32,  0.1901196f32,
    0.1792254f32,  0.1685608f32,  0.1582000f32,  0.1481383f32,
    0.1383758f32,  0.1289942f32,  0.1200751f32,  0.1117000f32,
    0.1039048f32,  0.09666748f32,  0.08998272f32,  0.08384531f32,
    0.07824999f32,  0.07320899f32,  0.06867816f32,  0.06456784f32,
    0.06078835f32,  0.05725001f32,  0.05390435f32,  0.05074664f32,
    0.04775276f32,  0.04489859f32,  0.04216000f32,  0.03950728f32,
    0.03693564f32,  0.03445836f32,  0.03208872f32,  0.02984000f32,
    0.02771181f32,  0.02569444f32,  0.02378716f32,  0.02198925f32,
    0.02030000f32,  0.01871805f32,  0.01724036f32,  0.01586364f32,
    0.01458461f32,  0.01340000f32,  0.01230723f32,  0.01130188f32,
    0.01037792f32,  0.009529306f32,  0.008749999f32,  0.008035200f32,
    0.007381600f32,  0.006785400f32,  0.006242800f32,  0.005749999f32,
    0.005303600f32,  0.004899800f32,  0.004534200f32,  0.004202400f32,
    0.003900000f32,  0.003623200f32,  0.003370600f32,  0.003141400f32,
    0.002934800f32,  0.002749999f32,  0.002585200f32,  0.002438600f32,
    0.002309400f32,  0.002196800f32,  0.002100000f32,  0.002017733f32,
    0.001948200f32,  0.001889800f32,  0.001840933f32,  0.001800000f32,
    0.001766267f32,  0.001737800f32,  0.001711200f32,  0.001683067f32,
    0.001650001f32,  0.001610133f32,  0.001564400f32,  0.001513600f32,
    0.001458533f32,  0.001400000f32,  0.001336667f32,  0.001270000f32,
    0.001205000f32,  0.001146667f32,  0.001100000f32,  0.001068800f32,
    0.001049400f32,  0.001035600f32,  0.001021200f32,  0.001000000f32,
    0.0009686400f32,  0.0009299200f32,  0.0008868800f32,  0.0008425600f32,
    0.0008000000f32,  0.0007609600f32,  0.0007236800f32,  0.0006859200f32,
    0.0006454400f32,  0.0006000000f32,  0.0005478667f32,  0.0004916000f32,
    0.0004354000f32,  0.0003834667f32,  0.0003400000f32,  0.0003072533f32,
    0.0002831600f32,  0.0002654400f32,  0.0002518133f32,  0.0002400000f32,
    0.0002295467f32,  0.0002206400f32,  0.0002119600f32,  0.0002021867f32,
    0.0001900000f32,  0.0001742133f32,  0.0001556400f32,  0.0001359600f32,
    0.0001168533f32,  0.0001000000f32,  0.00008613333f32,  0.00007460000f32,
    0.00006500000f32,  0.00005693333f32,  0.00004999999f32,  0.00004416000f32,
    0.00003948000f32,  0.00003572000f32,  0.00003264000f32,  0.00003000000f32,
    0.00002765333f32,  0.00002556000f32,  0.00002364000f32,  0.00002181333f32,
    0.00002000000f32,  0.00001813333f32,  0.00001620000f32,  0.00001420000f32,
    0.00001213333f32,  0.00001000000f32,  0.000007733333f32,  0.000005400000f32,
    0.000003200000f32,  0.000001333333f32,  0.000000000000f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32,  0.0f32,
    0.0f32,  0.0f32,  0.0f32
];

const CIE_LAMBDA: [usize; NUM_CIE_SAMPLES] = [
    360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373,
    374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387,
    388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401,
    402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
    416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
    430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
    444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
    458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
    472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
    486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
    500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
    514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
    528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
    542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
    556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
    570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
    584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
    598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
    612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
    626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
    640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
    654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
    668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
    682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695,
    696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
    710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
    724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
    738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
    752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
    766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
    780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
    794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807,
    808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821,
    822, 823, 824, 825, 826, 827, 828, 829, 830 ];

fn main() {
    let x_samples: Vec<_> =
        CIE_LAMBDA.iter().map(|x| *x as f32).zip(CIE_X.iter().map(|x| *x)).collect();
    
    let y_samples: Vec<_> =
        CIE_LAMBDA.iter().map(|x| *x as f32).zip(CIE_Y.iter().map(|x| *x)).collect();
    
    let z_samples: Vec<_> =
        CIE_LAMBDA.iter().map(|x| *x as f32).zip(CIE_Z.iter().map(|x| *x)).collect();

    let x_spectrum = Spectrum::from_samples(&x_samples);
    let y_spectrum = Spectrum::from_samples(&y_samples);
    let z_spectrum = Spectrum::from_samples(&z_samples);

    println!("{:?}", x_spectrum);
    println!("{:?}", y_spectrum);
    println!("{:?}", z_spectrum);
    let cs = match y_spectrum {
        Spectrum::Sampled(_cs) => _cs,
        _ => panic!("It should be sampled...")
    };

    println!("{:?}", cs.iter().fold(0.0, |x, y| x + y));
}
